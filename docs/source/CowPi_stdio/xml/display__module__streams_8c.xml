<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="display__module__streams_8c" kind="file" language="C++">
    <compoundname>display_module_streams.c</compoundname>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">Arduino.h</includes>
    <includes refid="file__streams_8h" local="yes">file_streams.h</includes>
    <includes refid="file__streams__internal_8h" local="yes">file_streams_internal.h</includes>
    <includes refid="hd44780_8h" local="yes">../hd44780/hd44780.h</includes>
    <includes refid="max7219_8h" local="yes">../max7219/max7219.h</includes>
    <includes refid="translations_8h" local="yes">../translations/translations.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/file_streams/display_module_streams.c</label>
        <link refid="display__module__streams_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>file_streams.h</label>
        <link refid="file__streams_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>file_streams_internal.h</label>
        <link refid="file__streams__internal_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>../hd44780/hd44780.h</label>
        <link refid="hd44780_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>../max7219/max7219.h</label>
        <link refid="max7219_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>../translations/translations.h</label>
        <link refid="translations_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>typedefs.h</label>
        <link refid="typedefs_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Arduino.h</label>
      </node>
      <node id="2">
        <label>stdbool.h</label>
      </node>
      <node id="8">
        <label>stdint.h</label>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
      <node id="4">
        <label>string.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="display__module__streams_8c_1abc1fa8058b8ee81462612def10b96e20" prot="public" static="no">
        <name>COWPI_STDIO_FILE_STREAMS_INTERNAL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/file_streams/display_module_streams.c" line="28" column="9" bodyfile="src/file_streams/display_module_streams.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="display__module__streams_8c_1ad7e03b055d65456d0d6ef4bba130424f" prot="public" static="no">
        <name>MAXIMUM_NUMBER_OF_STREAMS</name>
        <initializer>(5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/file_streams/display_module_streams.c" line="40" column="9" bodyfile="src/file_streams/display_module_streams.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="display__module__streams_8c_1a8dac8e358073eda509a4731b43ce3ed2" prot="public" static="no" mutable="no">
        <type>int8_t</type>
        <definition>int8_t number_of_streams</definition>
        <argsstring></argsstring>
        <name>number_of_streams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/file_streams/display_module_streams.c" line="41" column="8" bodyfile="src/file_streams/display_module_streams.c" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="display__module__streams_8c_1af6cc49a242c0b9e3995cbda583cd9594" prot="public" static="no" mutable="no">
        <type>stream_data_t</type>
        <definition>stream_data_t streams[MAXIMUM_NUMBER_OF_STREAMS]</definition>
        <argsstring>[MAXIMUM_NUMBER_OF_STREAMS]</argsstring>
        <name>streams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/file_streams/display_module_streams.c" line="42" column="15" bodyfile="src/file_streams/display_module_streams.c" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="display__module__streams_8c_1acae55e7766896d1fb7d7f0fd58a1df24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FILE *</type>
        <definition>FILE * cowpi_add_display_module</definition>
        <argsstring>(cowpi_display_module_t display_module, cowpi_display_module_protocol_t configuration)</argsstring>
        <name>cowpi_add_display_module</name>
        <param>
          <type><ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref></type>
          <declname>display_module</declname>
        </param>
        <param>
          <type><ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref></type>
          <declname>configuration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configures a display module for <computeroutput>fprintf()</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>display_module</parametername>
</parameternamelist>
<parameterdescription>
<para>the display module&apos;s details </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>configuration</parametername>
</parameternamelist>
<parameterdescription>
<para>the communication protocol&apos;s details </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to a <computeroutput>FILE</computeroutput> stream for the display module, or <computeroutput>NULL</computeroutput> if a stream could not be created </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/file_streams/display_module_streams.c" line="68" column="6" bodyfile="src/file_streams/display_module_streams.c" bodystart="68" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="display__module__streams_8c_1a7a85db5aa5dae2364f8293e2a2945c0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>stream_data_t *</type>
        <definition>stream_data_t * cowpi_file_to_cookie</definition>
        <argsstring>(FILE *filestream)</argsstring>
        <name>cowpi_file_to_cookie</name>
        <param>
          <type>FILE *</type>
          <declname>filestream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/file_streams/display_module_streams.c" line="201" column="15" bodyfile="src/file_streams/display_module_streams.c" bodystart="201" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="display__module__streams_8c_1a28652260c87d868bc0524c54680f7cf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cowpi_clear_display</definition>
        <argsstring>(FILE *filestream)</argsstring>
        <name>cowpi_clear_display</name>
        <param>
          <type>FILE *</type>
          <declname>filestream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes the contents of the display module and places the cursor in the home position.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filestream</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the <computeroutput>FILE</computeroutput> stream for the display module to be cleared </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/file_streams/display_module_streams.c" line="220" column="6" bodyfile="src/file_streams/display_module_streams.c" bodystart="220" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="display__module__streams_8c_1aa7ded5f8294db6df3914c10a5bf97911" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cowpi_sleep_display</definition>
        <argsstring>(FILE *filestream)</argsstring>
        <name>cowpi_sleep_display</name>
        <param>
          <type>FILE *</type>
          <declname>filestream</declname>
        </param>
        <briefdescription>
<para>Places a display module in a low-power state. </para>
        </briefdescription>
        <detaileddescription>
<para>If the display module has a low-power mode that preserves the contents of the display, then this function will place the display module in that mode.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filestream</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the <computeroutput>FILE</computeroutput> stream for the display module to be placed in a low-power state </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/file_streams/display_module_streams.c" line="232" column="6" bodyfile="src/file_streams/display_module_streams.c" bodystart="232" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="display__module__streams_8c_1ae4a8fe0e8d49ea22c9db2dcac2871bb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cowpi_wake_display</definition>
        <argsstring>(FILE *filestream)</argsstring>
        <name>cowpi_wake_display</name>
        <param>
          <type>FILE *</type>
          <declname>filestream</declname>
        </param>
        <briefdescription>
<para>Takes a display module out of a low-power state. </para>
        </briefdescription>
        <detaileddescription>
<para>If the display module has a low-power mode that preserves the contents of the display, then this function will take the display out of that mode, restoring the display&apos;s contents.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filestream</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the <computeroutput>FILE</computeroutput> stream for the display module to be brought out of a low-power state </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/file_streams/display_module_streams.c" line="243" column="6" bodyfile="src/file_streams/display_module_streams.c" bodystart="243" bodyend="252"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Functions that generate and use <computeroutput>FILE</computeroutput> streams for display modules. </para>
    </briefdescription>
    <detaileddescription>
<para>Implements the central <computeroutput>cowpi_add_display_module</computeroutput> function that generates FILE streams which can be used with <computeroutput>fprintf</computeroutput>. These FILE streams can also used to perform common manipulations of the display modules using other public functions implemented in this file. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CowPi_stdio<sp/>(c)<sp/>2022-23<sp/>Christopher<sp/>A.<sp/>Bohn</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COWPI_STDIO_FILE_STREAMS_INTERNAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Arduino.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="file__streams_8h" kindref="compound">file_streams.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="file__streams__internal_8h" kindref="compound">file_streams_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../hd44780/hd44780.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../max7219/max7219.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../translations/translations.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAXIMUM_NUMBER_OF_STREAMS<sp/>(5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">int8_t<sp/>number_of_streams;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">stream_data_t<sp/>streams[MAXIMUM_NUMBER_OF_STREAMS];</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__AVR__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cowpi_display_module_put(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c,<sp/>FILE<sp/>*filestream);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//__AVR__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">FILE<sp/>*<ref refid="display__module__streams_8c_1acae55e7766896d1fb7d7f0fd58a1df24" kindref="member">cowpi_add_display_module</ref>(<ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref><sp/>display_module,<sp/><ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref><sp/>configuration)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(number_of_streams<sp/>==<sp/>MAXIMUM_NUMBER_OF_STREAMS)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*stream;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>stream_data_t<sp/>*stream_data<sp/>=<sp/>streams<sp/>+<sp/>number_of_streams;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;stream_data-&gt;display_module,<sp/>&amp;display_module,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref>));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;stream_data-&gt;configuration,<sp/>&amp;configuration,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref>));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>words_per_minute<sp/>=<sp/>display_module.words_per_minute;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(stream_data-&gt;configuration.protocol)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NO_PROTOCOL:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(display_module.display_module<sp/>!=<sp/>MORSE_CODE)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="translations_8cpp_1a17c91c645a4fa0112a0b3ea8b7ef4ece" kindref="member">cowpi_pin_mode</ref>(stream_data-&gt;configuration.data_pin,<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SPI:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((stream_data-&gt;configuration.data_pin<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(stream_data-&gt;configuration.data_pin<sp/>==<sp/>stream_data-&gt;configuration.select_pin))<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream_data-&gt;configuration.select_pin<sp/>=<sp/>SS;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((stream_data-&gt;configuration.data_pin<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(stream_data-&gt;configuration.data_pin<sp/>==<sp/>stream_data-&gt;configuration.clock_pin))<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream_data-&gt;configuration.data_pin<sp/>=<sp/>MOSI;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream_data-&gt;configuration.clock_pin<sp/>=<sp/>SCK;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="translations_8cpp_1a17c91c645a4fa0112a0b3ea8b7ef4ece" kindref="member">cowpi_pin_mode</ref>(stream_data-&gt;configuration.data_pin,<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="translations_8cpp_1a17c91c645a4fa0112a0b3ea8b7ef4ece" kindref="member">cowpi_pin_mode</ref>(stream_data-&gt;configuration.clock_pin,<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="translations_8cpp_1a17c91c645a4fa0112a0b3ea8b7ef4ece" kindref="member">cowpi_pin_mode</ref>(stream_data-&gt;configuration.select_pin,<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>I2C:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((stream_data-&gt;configuration.data_pin<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(stream_data-&gt;configuration.data_pin<sp/>==<sp/>stream_data-&gt;configuration.clock_pin))<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream_data-&gt;configuration.data_pin<sp/>=<sp/>SDA;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream_data-&gt;configuration.clock_pin<sp/>=<sp/>SCL;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="translations_8cpp_1a17c91c645a4fa0112a0b3ea8b7ef4ece" kindref="member">cowpi_pin_mode</ref>(stream_data-&gt;configuration.data_pin,<sp/>INPUT);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="translations_8cpp_1a17c91c645a4fa0112a0b3ea8b7ef4ece" kindref="member">cowpi_pin_mode</ref>(stream_data-&gt;configuration.clock_pin,<sp/>INPUT);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stream_data-&gt;configuration.i2c_address)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>general<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stream_data-&gt;configuration.i2c_address<sp/>&amp;<sp/>0x80)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>invalid<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(display_module.display_module)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SEVEN_SEGMENT:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>to<sp/>a<sp/>single<sp/>module<sp/>of<sp/>8<sp/>digits<sp/>(which<sp/>is<sp/>good<sp/>because<sp/>we&apos;re<sp/>not<sp/>handling<sp/>chained<sp/>modules<sp/>yet)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stream_data-&gt;display_module.width)<sp/>stream_data-&gt;display_module.width<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>use<sp/>SPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stream_data-&gt;configuration.protocol<sp/>!=<sp/>SPI)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>digits<sp/>must<sp/>be<sp/>multiple<sp/>of<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(display_module.width<sp/>&amp;<sp/>0x7)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max7219_8c_1aa3cf9e639e5c1de7634bd001eec9d484" kindref="member">cowpi_setup_max7219</ref>(&amp;stream_data-&gt;configuration);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>0wpm<sp/>(the<sp/>default),<sp/>no<sp/>scrolling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!words_per_minute)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream_data-&gt;put<sp/>=<sp/>cowpi_seven_segment_noscroll_put;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cowpi_enable_buffer_timer();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>minimum<sp/>6wpm<sp/>(2000ms<sp/>per<sp/>letter),<sp/>maximum<sp/>255wpm<sp/>(47ms<sp/>per<sp/>letter)<sp/>when<sp/>scrolling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(words_per_minute<sp/>&lt;<sp/>6)<sp/>words_per_minute<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream_data-&gt;ms_per_signal<sp/>=<sp/>60000<sp/></highlight><highlight class="comment">/*<sp/>ms<sp/>per<sp/>minute<sp/>*/</highlight><highlight class="normal"><sp/>/<sp/>5<sp/></highlight><highlight class="comment">/*<sp/>letters<sp/>per<sp/>&quot;PARIS&quot;<sp/>word<sp/>*/</highlight><highlight class="normal"><sp/>/<sp/>words_per_minute;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream_data-&gt;put<sp/>=<sp/>cowpi_seven_segment_scrolling_put;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LED_MATRIX:</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cowpi_enable_buffer_timer();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>to<sp/>a<sp/>single<sp/>8x8<sp/>module<sp/>(which<sp/>is<sp/>good<sp/>because<sp/>we&apos;re<sp/>not<sp/>handling<sp/>chained<sp/>modules<sp/>yet)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stream_data-&gt;display_module.width)<sp/>stream_data-&gt;display_module.width<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stream_data-&gt;display_module.height)<sp/>stream_data-&gt;display_module.height<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>use<sp/>SPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stream_data-&gt;configuration.protocol<sp/>!=<sp/>SPI)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>rows<sp/>and<sp/>columns<sp/>must<sp/>each<sp/>be<sp/>multiple<sp/>of<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(display_module.width<sp/>&amp;<sp/>0x7)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(display_module.height<sp/>&amp;<sp/>0x7)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max7219_8c_1aa3cf9e639e5c1de7634bd001eec9d484" kindref="member">cowpi_setup_max7219</ref>(&amp;stream_data-&gt;configuration);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>wpm<sp/>assuming<sp/>fixed<sp/>spacing<sp/>of<sp/>6<sp/>columns<sp/>per<sp/>character<sp/>(5<sp/>character<sp/>+<sp/>1<sp/>intercharacter<sp/>space)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>proportional<sp/>spacing<sp/>26<sp/>columns<sp/>per<sp/>&quot;PARIS&quot;<sp/>word<sp/>(vs<sp/>30)<sp/>--<sp/>a<sp/>non-trivial<sp/>but<sp/>acceptable<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>to<sp/>5wpm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!words_per_minute)<sp/>words_per_minute<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>minimum<sp/>1wpm<sp/>(250ms<sp/>per<sp/>column),<sp/>maximum<sp/>250wpm<sp/>(1ms<sp/>per<sp/>column)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(words_per_minute<sp/>&gt;<sp/>250)<sp/>words_per_minute<sp/>=<sp/>250;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream_data-&gt;ms_per_signal<sp/>=<sp/>60000<sp/></highlight><highlight class="comment">/*<sp/>ms<sp/>per<sp/>minute<sp/>*/</highlight><highlight class="normal"><sp/>/<sp/>30<sp/></highlight><highlight class="comment">/*<sp/>columns<sp/>per<sp/>&quot;PARIS&quot;<sp/>word<sp/>*/</highlight><highlight class="normal"><sp/>/<sp/>words_per_minute;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream_data-&gt;put<sp/>=<sp/>cowpi_led_matrix_scrolling_put;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LCD_CHARACTER:</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>to<sp/>LCD1602</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stream_data-&gt;display_module.width)<sp/>stream_data-&gt;display_module.width<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stream_data-&gt;display_module.height)<sp/>stream_data-&gt;display_module.height<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>be<sp/>LCD1602<sp/>or<sp/>LCD2004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(stream_data-&gt;display_module.width<sp/>==<sp/>16<sp/>&amp;&amp;<sp/>stream_data-&gt;display_module.height<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!(stream_data-&gt;display_module.width<sp/>==<sp/>20<sp/>&amp;&amp;<sp/>stream_data-&gt;display_module.height<sp/>==<sp/>4))</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hd44780_8c_1ad31e56f967148bdc0deae2f59f89a118" kindref="member">cowpi_setup_hd44780</ref>(&amp;stream_data-&gt;configuration);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hd44780_8c_1a40221ee5cf4a248048243cfffc7f1f95" kindref="member">cowpi_hd44780_set_backlight</ref>(&amp;stream_data-&gt;configuration,<sp/>1);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream_data-&gt;put<sp/>=<sp/>cowpi_lcd_character_put;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MORSE_CODE:</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cowpi_enable_buffer_timer();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>to<sp/>5wpm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!words_per_minute)<sp/>words_per_minute<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>minimum<sp/>1wpm<sp/>(1200ms<sp/>per<sp/>unit),<sp/>maximum<sp/>150wpm<sp/>(1ms<sp/>per<sp/>unit)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(words_per_minute<sp/>&gt;<sp/>150)<sp/>words_per_minute<sp/>=<sp/>150;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream_data-&gt;ms_per_signal<sp/>=<sp/>60000<sp/></highlight><highlight class="comment">/*<sp/>ms<sp/>per<sp/>minute<sp/>*/</highlight><highlight class="normal"><sp/>/<sp/>50<sp/></highlight><highlight class="comment">/*<sp/>units<sp/>per<sp/>&quot;PARIS&quot;<sp/>word<sp/>*/</highlight><highlight class="normal"><sp/>/<sp/>words_per_minute;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream_data-&gt;put<sp/>=<sp/>cowpi_morse_code_put;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__AVR__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>=<sp/>&amp;(streams[number_of_streams].stream);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>fdev_setup_stream(stream,<sp/>cowpi_display_module_put,<sp/>NULL,<sp/>_FDEV_SETUP_WRITE);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>(ARDUINO_ARCH_SAMD)<sp/>||<sp/>defined<sp/>(__MBED__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>=<sp/>funopen(stream_data,<sp/>NULL,<sp/>stream_data-&gt;put,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>suppose<sp/>we<sp/>should<sp/>make<sp/>line<sp/>buffering<sp/>an<sp/>option,<sp/>but<sp/>not<sp/>today</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setvbuf(stream,<sp/>NULL,<sp/>_IONBF,<sp/>0))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>stream_data-&gt;stream<sp/>=<sp/>stream;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//architecture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>number_of_streams++;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stream;</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__AVR__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cowpi_display_module_put(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c,<sp/>FILE<sp/>*filestream)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>stream_data_t<sp/>*stream_data<sp/>=<sp/>cowpi_file_to_cookie(filestream);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>returned_value<sp/>=<sp/>stream_data-&gt;put(stream_data,<sp/>&amp;c,<sp/>1);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(returned_value<sp/>==<sp/>-1<sp/>||<sp/>returned_value<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//__AVR__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal">stream_data_t<sp/>*cowpi_file_to_cookie(FILE<sp/>*filestream)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__AVR__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>the<sp/>file<sp/>stream<sp/>is<sp/>the<sp/>first<sp/>element<sp/>in<sp/>the<sp/>struct,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>address<sp/>of<sp/>that<sp/>element<sp/>is<sp/>also<sp/>the<sp/>base<sp/>address<sp/>of<sp/>the<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stream_data_t<sp/>*)<sp/>filestream;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>stream_data_t<sp/>*cookie<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cookie<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>MAXIMUM_NUMBER_OF_STREAMS)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(streams[i].stream<sp/>==<sp/>filestream)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cookie<sp/>=<sp/>streams<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cookie;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//__AVR__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display__module__streams_8c_1a28652260c87d868bc0524c54680f7cf1" kindref="member">cowpi_clear_display</ref>(FILE<sp/>*filestream)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>stream_data_t<sp/>*stream_data<sp/>=<sp/>cowpi_file_to_cookie(filestream);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*put)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>int)<sp/>=<sp/>stream_data-&gt;put;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref><sp/>*configuration<sp/>=<sp/>&amp;stream_data-&gt;configuration;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(put<sp/>==<sp/>cowpi_seven_segment_noscroll_put)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(filestream,<sp/></highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>place<sp/>cursor<sp/>at<sp/>start<sp/>of<sp/>line,<sp/>and<sp/>then<sp/>\n<sp/>clears<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(put<sp/>==<sp/>cowpi_lcd_character_put)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(filestream,<sp/></highlight><highlight class="stringliteral">&quot;\f&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>that<sp/>`put`<sp/>knows<sp/>where<sp/>the<sp/>cursor<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hd44780_8c_1aacdfb659a2e1719d3a6616e1bf7e3665" kindref="member">cowpi_hd44780_clear_display</ref>(configuration);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display__module__streams_8c_1aa7ded5f8294db6df3914c10a5bf97911" kindref="member">cowpi_sleep_display</ref>(FILE<sp/>*filestream)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>stream_data_t<sp/>*stream_data<sp/>=<sp/>cowpi_file_to_cookie(filestream);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*put)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>int)<sp/>=<sp/>stream_data-&gt;put;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref><sp/>*configuration<sp/>=<sp/>&amp;stream_data-&gt;configuration;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(put<sp/>==<sp/>cowpi_seven_segment_noscroll_put<sp/>||<sp/>put<sp/>==<sp/>cowpi_seven_segment_scrolling_put)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max7219_8c_1a5485fb13f4b90d3e0ce92f5830a42991" kindref="member">cowpi_max7219_shutdown</ref>(configuration);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(put<sp/>==<sp/>cowpi_lcd_character_put)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hd44780_8c_1a40221ee5cf4a248048243cfffc7f1f95" kindref="member">cowpi_hd44780_set_backlight</ref>(configuration,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display__module__streams_8c_1ae4a8fe0e8d49ea22c9db2dcac2871bb6" kindref="member">cowpi_wake_display</ref>(FILE<sp/>*filestream)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>stream_data_t<sp/>*stream_data<sp/>=<sp/>cowpi_file_to_cookie(filestream);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*put)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>int)<sp/>=<sp/>stream_data-&gt;put;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref><sp/>*configuration<sp/>=<sp/>&amp;stream_data-&gt;configuration;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(put<sp/>==<sp/>cowpi_seven_segment_noscroll_put<sp/>||<sp/>put<sp/>==<sp/>cowpi_seven_segment_scrolling_put)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max7219_8c_1a3144ea1358ef6ae7a54bd6b5d21cec2d" kindref="member">cowpi_max7219_startup</ref>(configuration);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(put<sp/>==<sp/>cowpi_lcd_character_put)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hd44780_8c_1a40221ee5cf4a248048243cfffc7f1f95" kindref="member">cowpi_hd44780_set_backlight</ref>(configuration,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/file_streams/display_module_streams.c"/>
  </compounddef>
</doxygen>
