<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="timed__streams_8cpp" kind="file" language="C++">
    <compoundname>timed_streams.cpp</compoundname>
    <includes local="no">stdbool.h</includes>
    <includes refid="file__streams__internal_8h" local="yes">file_streams_internal.h</includes>
    <incdepgraph>
      <node id="3">
        <label>file_streams_internal.h</label>
        <link refid="file__streams__internal_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/file_streams/timed_streams.cpp</label>
        <link refid="timed__streams_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>typedefs.h</label>
        <link refid="typedefs_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Arduino.h</label>
      </node>
      <node id="2">
        <label>stdbool.h</label>
      </node>
      <node id="7">
        <label>stdint.h</label>
      </node>
      <node id="5">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="timed__streams_8cpp_1abc1fa8058b8ee81462612def10b96e20" prot="public" static="no">
        <name>COWPI_STDIO_FILE_STREAMS_INTERNAL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/file_streams/timed_streams.cpp" line="23" column="9" bodyfile="src/file_streams/timed_streams.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="timed__streams_8cpp_1af239449afdda7f6ab670d3c7a51c097c" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t buffer_head</definition>
        <argsstring></argsstring>
        <name>buffer_head</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/file_streams/timed_streams.cpp" line="60" column="9" bodyfile="src/file_streams/timed_streams.cpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="timed__streams_8cpp_1a974eb817c2508ecbe316a53ca8eed09d" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t buffer_tail</definition>
        <argsstring></argsstring>
        <name>buffer_tail</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/file_streams/timed_streams.cpp" line="61" column="9" bodyfile="src/file_streams/timed_streams.cpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="timed__streams_8cpp_1aef80160bcbb70260e542d54b28cad542" prot="public" static="no" mutable="no">
        <type>symbol_t</type>
        <definition>symbol_t symbol_buffer[BUFFER_SIZE]</definition>
        <argsstring>[BUFFER_SIZE]</argsstring>
        <name>symbol_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/file_streams/timed_streams.cpp" line="62" column="10" bodyfile="src/file_streams/timed_streams.cpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="timed__streams_8cpp_1a654ad7c9ed8664b819bdd4b349eb8d49" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void timer_handler</definition>
        <argsstring>(void)</argsstring>
        <name>timer_handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Interrupt handler for the symbol buffer&apos;s timer interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para>On each invocation, the elapsed time is updated. If enough time has elapsed, the symbol at the head of the buffer is sent to the appropriate display module. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/file_streams/timed_streams.cpp" line="79" column="13" bodyfile="src/file_streams/timed_streams.cpp" bodystart="79" bodyend="92" declfile="src/file_streams/timed_streams.cpp" declline="35" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="timed__streams_8cpp_1a3f133d37b572ceea7d737980584f0879" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cowpi_enable_buffer_timer</definition>
        <argsstring>(void)</argsstring>
        <name>cowpi_enable_buffer_timer</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/file_streams/timed_streams.cpp" line="64" column="6" bodyfile="src/file_streams/timed_streams.cpp" bodystart="64" bodyend="77"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Functions supporting the timer interrupt-based symbol buffer, and the externalized symbol buffer itself. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CowPi_stdio<sp/>(c)<sp/>2022-23<sp/>Christopher<sp/>A.<sp/>Bohn</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COWPI_STDIO_FILE_STREAMS_INTERNAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="file__streams__internal_8h" kindref="compound">file_streams_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="timed__streams_8cpp_1a654ad7c9ed8664b819bdd4b349eb8d49" kindref="member">timer_handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__AVR_ATmega328P__)<sp/>||<sp/>defined<sp/>(__AVR_ATmega2560__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avr/interrupt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">ISR(TIMER0_COMPB_vect)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="timed__streams_8cpp_1a654ad7c9ed8664b819bdd4b349eb8d49" kindref="member">timer_handler</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__MBED__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mbed.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>mbed::Ticker<sp/>displayTicker;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#warning<sp/>Timer<sp/>for<sp/>buffered<sp/>display<sp/>modules<sp/>will<sp/>not<sp/>be<sp/>enabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//architecture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">uint8_t<sp/>buffer_head<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">uint8_t<sp/>buffer_tail<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">symbol_t<sp/>symbol_buffer[BUFFER_SIZE];</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cowpi_enable_buffer_timer(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>timer_is_enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!timer_is_enabled)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer_is_enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__AVR_ATmega328P__)<sp/>||<sp/>defined<sp/>(__AVR_ATmega2560__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OCR0B<sp/>=<sp/>0x40;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fires<sp/>every<sp/>1.024ms<sp/>--<sp/>close<sp/>enough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TIMSK0<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>OCIE0B);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__MBED__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>displayTicker.attach(<ref refid="timed__streams_8cpp_1a654ad7c9ed8664b819bdd4b349eb8d49" kindref="member">timer_handler</ref>,<sp/>std::chrono::milliseconds(1));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#warning<sp/>Timer<sp/>for<sp/>buffered<sp/>display<sp/>modules<sp/>will<sp/>not<sp/>be<sp/>enabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//architecture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="timed__streams_8cpp_1a654ad7c9ed8664b819bdd4b349eb8d49" kindref="member">timer_handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>milliseconds<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next_symbol_change<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!BUFFER_IS_EMPTY)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>milliseconds++;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_symbol_change<sp/>==<sp/>milliseconds)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbol_t<sp/>*symbol<sp/>=<sp/>symbol_buffer<sp/>+<sp/>buffer_head;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer_head<sp/>=<sp/>INCREMENT_MODULO(buffer_head,<sp/>BUFFER_SIZE);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbol-&gt;callback(symbol);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>milliseconds<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_symbol_change<sp/>=<sp/>symbol-&gt;symbol_duration<sp/>*<sp/>SYMBOL_DURATION_SCALING_FACTOR;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/file_streams/timed_streams.cpp"/>
  </compounddef>
</doxygen>
