<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="typedefs_8h" kind="file" language="C++">
    <compoundname>typedefs.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includedby refid="_cow_pi__stdio_8h" local="yes">src/CowPi_stdio.h</includedby>
    <includedby refid="communication_8h" local="yes">src/communication/communication.h</includedby>
    <includedby refid="file__streams_8h" local="yes">src/file_streams/file_streams.h</includedby>
    <includedby refid="file__streams__internal_8h" local="yes">src/file_streams/file_streams_internal.h</includedby>
    <includedby refid="hd44780_8h" local="yes">src/hd44780/hd44780.h</includedby>
    <includedby refid="max7219_8h" local="yes">src/max7219/max7219.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>src/typedefs.h</label>
        <link refid="typedefs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>src/CowPi_stdio.h</label>
        <link refid="_cow_pi__stdio_8h"/>
      </node>
      <node id="3">
        <label>src/communication/communication.h</label>
        <link refid="communication_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>src/communication/i2c.c</label>
        <link refid="i2c_8c"/>
      </node>
      <node id="4">
        <label>src/communication/i2c.h</label>
        <link refid="i2c_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/communication/spi.c</label>
        <link refid="spi_8c"/>
      </node>
      <node id="6">
        <label>src/communication/spi.h</label>
        <link refid="spi_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>src/file_streams/display_module_streams.c</label>
        <link refid="display__module__streams_8c"/>
      </node>
      <node id="10">
        <label>src/file_streams/file_streams.h</label>
        <link refid="file__streams_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>src/file_streams/file_streams_internal.h</label>
        <link refid="file__streams__internal_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>src/file_streams/hd44780_streams.c</label>
        <link refid="hd44780__streams_8c"/>
      </node>
      <node id="15">
        <label>src/file_streams/max7219_streams.c</label>
        <link refid="max7219__streams_8c"/>
      </node>
      <node id="16">
        <label>src/file_streams/morse_code_streams.c</label>
        <link refid="morse__code__streams_8c"/>
      </node>
      <node id="12">
        <label>src/file_streams/stdin_stdout.cpp</label>
        <link refid="stdin__stdout_8cpp"/>
      </node>
      <node id="17">
        <label>src/file_streams/timed_streams.cpp</label>
        <link refid="timed__streams_8cpp"/>
      </node>
      <node id="8">
        <label>src/hd44780/hd44780.c</label>
        <link refid="hd44780_8c"/>
      </node>
      <node id="18">
        <label>src/hd44780/hd44780.h</label>
        <link refid="hd44780_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>src/max7219/max7219.c</label>
        <link refid="max7219_8c"/>
      </node>
      <node id="19">
        <label>src/max7219/max7219.h</label>
        <link refid="max7219_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/typedefs.h</label>
        <link refid="typedefs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structcowpi__display__module__t" prot="public">cowpi_display_module_t</innerclass>
    <innerclass refid="structcowpi__display__module__protocol__t" prot="public">cowpi_display_module_protocol_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="typedefs_8h_1a6d3dee1ec4ba6aafec39cefe74684191" prot="public" static="no" strong="no">
        <type></type>
        <name>display_modules</name>
        <enumvalue id="typedefs_8h_1a6d3dee1ec4ba6aafec39cefe74684191a2a6003405e87a615cf8a9d4f102bac8f" prot="public">
          <name>NO_MODULE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="typedefs_8h_1a6d3dee1ec4ba6aafec39cefe74684191a41ee54be7e945a4ad303a81d2e44b2cc" prot="public">
          <name>SEVEN_SEGMENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="typedefs_8h_1a6d3dee1ec4ba6aafec39cefe74684191a846f8c965ed56fbfec6ab2f1e38f3361" prot="public">
          <name>LED_MATRIX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="typedefs_8h_1a6d3dee1ec4ba6aafec39cefe74684191aaa39dea0a8a4f905e1488be2a5e12a39" prot="public">
          <name>LCD_CHARACTER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="typedefs_8h_1a6d3dee1ec4ba6aafec39cefe74684191a44f0d187be51f4238eec1f232def2afd" prot="public">
          <name>OLED_MATRIX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="typedefs_8h_1a6d3dee1ec4ba6aafec39cefe74684191a8119e096e052c0110d16e6704681a27e" prot="public">
          <name>MORSE_CODE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Choices of display modules. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/typedefs.h" line="39" column="1" bodyfile="src/typedefs.h" bodystart="39" bodyend="46"/>
      </memberdef>
      <memberdef kind="enum" id="typedefs_8h_1a17e213b55d23626361c092746fd9aa3e" prot="public" static="no" strong="no">
        <type></type>
        <name>orientations</name>
        <enumvalue id="typedefs_8h_1a17e213b55d23626361c092746fd9aa3eab5b3793b961949c817c7c0d99c05dad7" prot="public">
          <name>EAST</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="typedefs_8h_1a17e213b55d23626361c092746fd9aa3ead0611de6f28d4a9c9eac959f5344698e" prot="public">
          <name>NORTH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="typedefs_8h_1a17e213b55d23626361c092746fd9aa3eae9449e8683a8199dad36b07a63b2f523" prot="public">
          <name>WEST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="typedefs_8h_1a17e213b55d23626361c092746fd9aa3ea8ef5c0bce69283a9986011a63eea8a6b" prot="public">
          <name>SOUTH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Rotation/orientations for LED matrices. </para>
        </briefdescription>
        <detaileddescription>
<para>There is no significance to the names of the orientations except that they are easy-to-remember names for the four possible orientations and make no implications about a preference for how the application programmer orients their LED matrix. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/typedefs.h" line="56" column="1" bodyfile="src/typedefs.h" bodystart="56" bodyend="61"/>
      </memberdef>
      <memberdef kind="enum" id="typedefs_8h_1a8e52c966e0076d183563b5aac207dc05" prot="public" static="no" strong="no">
        <type></type>
        <name>flips</name>
        <enumvalue id="typedefs_8h_1a8e52c966e0076d183563b5aac207dc05a4f73b81acb40b3226b61e6b4cd9dac9f" prot="public">
          <name>HEADS</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="typedefs_8h_1a8e52c966e0076d183563b5aac207dc05a55ad5ea7ad8db0a296376f8e1594987b" prot="public">
          <name>TAILS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Mappings the matrix LEDs to each byte&apos;s bits. </para>
        </briefdescription>
        <detaileddescription>
<para>There doesn&apos;t appear to be consensus on which end of the matrix corresponds to the most/least-significant bits. Consequently, assuming one mapping could result in the characters being displayed backwards, and so we offer the opportunity to select the mapping.</para>
<para>There is no significance to the names of the orientations except that they are easy-to-remember names for the two possible mappings and make no implications about a preference for one mapping or the other. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/typedefs.h" line="75" column="1" bodyfile="src/typedefs.h" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="enum" id="typedefs_8h_1afd636896b1f6e43aacdb4c31b5da5036" prot="public" static="no" strong="no">
        <type></type>
        <name>protocols</name>
        <enumvalue id="typedefs_8h_1afd636896b1f6e43aacdb4c31b5da5036a2adafc65f411aa90e302c562b2d89aba" prot="public">
          <name>NO_PROTOCOL</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="typedefs_8h_1afd636896b1f6e43aacdb4c31b5da5036a999bae3da733e2c2015a4585271b0187" prot="public">
          <name>I2C</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="typedefs_8h_1afd636896b1f6e43aacdb4c31b5da5036aefea9eb0772378037221a3f1fe759a76" prot="public">
          <name>SPI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Communication protocols used to send data to a display module. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/typedefs.h" line="83" column="1" bodyfile="src/typedefs.h" bodystart="83" bodyend="87"/>
      </memberdef>
      <memberdef kind="enum" id="typedefs_8h_1a338f0414b64e1aaa411ef8e80337c173" prot="public" static="no" strong="no">
        <type></type>
        <name>adapter_mappings</name>
        <enumvalue id="typedefs_8h_1a338f0414b64e1aaa411ef8e80337c173ac66f26b2dc734f6d371e3690088add14" prot="public">
          <name>COWPI_DEFAULT</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="typedefs_8h_1a338f0414b64e1aaa411ef8e80337c173aa50a1234275945d24f66577f7ae4fc5a" prot="public">
          <name>ADAFRUIT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Mappings of transmitted bits to LCD character display lines. </para>
        </briefdescription>
        <detaileddescription>
<para>Universally, the adapter modules for HD44780-based displays map transmitted bits to some of the display module&apos;s lines: four data bits, the RS (data/command) line, the RW (read/write) line, and the backlight. Where they differ is which bits correspond to which lines.</para>
<para>The default mapping is that used by the ubiquitous PCF8574-based modules that sell for a couple of dollars. The ADAFRUIT mapping is that used by <ulink url="https://www.adafruit.com/product/292">Adafruit&apos;s I2C/SPI character LCD backpack</ulink>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/typedefs.h" line="101" column="1" bodyfile="src/typedefs.h" bodystart="101" bodyend="104"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="typedefs_8h_1a60f460d6da2938baccbfd94fe2a9331a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref></type>
        <definition>static cowpi_display_module_protocol_t cowpi_configure_single_pin</definition>
        <argsstring>(uint8_t data_pin)</argsstring>
        <name>cowpi_configure_single_pin</name>
        <param>
          <type>uint8_t</type>
          <declname>data_pin</declname>
        </param>
        <briefdescription>
<para>Produces a <computeroutput><ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref></computeroutput> instantiation for a &quot;display&quot; that doesn&apos;t require a communication protocol, such as <computeroutput>MORSE_CODE</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data_pin</parametername>
</parameternamelist>
<parameterdescription>
<para>the pin used to send data to the &quot;display&quot; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <computeroutput><ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref></computeroutput> instantiation initialized for <computeroutput>NO_PROTOCOL</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/typedefs.h" line="187" column="47" bodyfile="src/typedefs.h" bodystart="187" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="typedefs_8h_1ac450537bd2d711481dc166356cede4ca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref></type>
        <definition>static cowpi_display_module_protocol_t cowpi_configure_spi</definition>
        <argsstring>(uint8_t select_pin, uint8_t data_pin=COWPI_DEFAULT_SPI_DATA_PIN, uint8_t clock_pin=COWPI_DEFAULT_SPI_CLOCK_PIN, enum adapter_mappings adapter_mapping=COWPI_DEFAULT)</argsstring>
        <name>cowpi_configure_spi</name>
        <param>
          <type>uint8_t</type>
          <declname>select_pin</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>data_pin</declname>
          <defval>COWPI_DEFAULT_SPI_DATA_PIN</defval>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>clock_pin</declname>
          <defval>COWPI_DEFAULT_SPI_CLOCK_PIN</defval>
        </param>
        <param>
          <type>enum <ref refid="typedefs_8h_1a338f0414b64e1aaa411ef8e80337c173" kindref="member">adapter_mappings</ref></type>
          <declname>adapter_mapping</declname>
          <defval>COWPI_DEFAULT</defval>
        </param>
        <briefdescription>
<para>Produces a <computeroutput><ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref></computeroutput> instantiation for the Serial-Parallel Interface (SPI) protocol. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data_pin</parametername>
</parameternamelist>
<parameterdescription>
<para>the data output pin, possibly called SDO, COPI, PICO, DAT (data), TX, or (deprecated) MOSI </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clock_pin</parametername>
</parameternamelist>
<parameterdescription>
<para>the clock pin, possibly called SCK or CLK </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>select_pin</parametername>
</parameternamelist>
<parameterdescription>
<para>the peripheral-select pin, possibly called CS, LAT (latch), or (deprecated) SS </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>adapter_mapping</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) the mapping of transmitted bits to HD44780 lines </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <computeroutput><ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref></computeroutput> instantiation initialized for <computeroutput>SPI</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/typedefs.h" line="212" column="47" bodyfile="src/typedefs.h" bodystart="212" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="typedefs_8h_1aefd856d56e7dfa644278ecc72ae40094" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref></type>
        <definition>static cowpi_display_module_protocol_t cowpi_configure_i2c</definition>
        <argsstring>(uint8_t i2c_address, uint8_t data_pin=COWPI_DEFAULT_I2C_DATA_PIN, uint8_t clock_pin=COWPI_DEFAULT_I2C_CLOCK_PIN, enum adapter_mappings adapter_mapping=COWPI_DEFAULT)</argsstring>
        <name>cowpi_configure_i2c</name>
        <param>
          <type>uint8_t</type>
          <declname>i2c_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>data_pin</declname>
          <defval>COWPI_DEFAULT_I2C_DATA_PIN</defval>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>clock_pin</declname>
          <defval>COWPI_DEFAULT_I2C_CLOCK_PIN</defval>
        </param>
        <param>
          <type>enum <ref refid="typedefs_8h_1a338f0414b64e1aaa411ef8e80337c173" kindref="member">adapter_mappings</ref></type>
          <declname>adapter_mapping</declname>
          <defval>COWPI_DEFAULT</defval>
        </param>
        <briefdescription>
<para>Produces a <computeroutput><ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref></computeroutput> instantiation for the Inter-Integrated Circuit (I2C, or IIC), aka the Two-Wire Interface (TWI), protocol. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data_pin</parametername>
</parameternamelist>
<parameterdescription>
<para>the data output pin, SDA </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clock_pin</parametername>
</parameternamelist>
<parameterdescription>
<para>the clock pin, SCL </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i2c_address</parametername>
</parameternamelist>
<parameterdescription>
<para>the peripheral&apos;s 7-bit address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>adapter_mapping</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) the mapping of transmitted bits to HD44780 lines </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <computeroutput><ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref></computeroutput> instantiation initialized for <computeroutput>I2C</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/typedefs.h" line="239" column="47" bodyfile="src/typedefs.h" bodystart="239" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="typedefs_8h_1a7a30b2642abc03336752fee9b7346fab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref></type>
        <definition>static cowpi_display_module_t cowpi_configure_seven_segment_display</definition>
        <argsstring>()</argsstring>
        <name>cowpi_configure_seven_segment_display</name>
        <briefdescription>
<para>Produces a <computeroutput><ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref></computeroutput> instantiation for a MAX7219-controlled 8-digit/7-segment display module. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a <computeroutput><ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref></computeroutput> instantiation initialized for an 8-digit/7-segment display </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/typedefs.h" line="260" column="38" bodyfile="src/typedefs.h" bodystart="260" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="typedefs_8h_1aba5b55f258c69a4e4bb7f369d9cdf039" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref></type>
        <definition>static cowpi_display_module_t cowpi_configure_scrolling_seven_segment_display</definition>
        <argsstring>(uint8_t words_per_minute=30)</argsstring>
        <name>cowpi_configure_scrolling_seven_segment_display</name>
        <param>
          <type>uint8_t</type>
          <declname>words_per_minute</declname>
          <defval>30</defval>
        </param>
        <briefdescription>
<para>Produces a <computeroutput><ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref></computeroutput> instantiation for a MAX7219-controlled 8-digit/7-segment display module that has text scrolling from right-to-left. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>words_per_minute</parametername>
</parameternamelist>
<parameterdescription>
<para>the approximate rate at which the text scrolls across the display </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <computeroutput><ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref></computeroutput> instantiation initialized for an 8-digit/7-segment display with scrolling text </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/typedefs.h" line="281" column="38" bodyfile="src/typedefs.h" bodystart="281" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="typedefs_8h_1a0e902fa7db358312d830c684be1dc0fa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref></type>
        <definition>static cowpi_display_module_t cowpi_configure_led_matrix_display</definition>
        <argsstring>(uint8_t words_per_minute=30, enum orientations display_orientation=EAST, enum flips character_flip=HEADS)</argsstring>
        <name>cowpi_configure_led_matrix_display</name>
        <param>
          <type>uint8_t</type>
          <declname>words_per_minute</declname>
          <defval>30</defval>
        </param>
        <param>
          <type>enum <ref refid="typedefs_8h_1a17e213b55d23626361c092746fd9aa3e" kindref="member">orientations</ref></type>
          <declname>display_orientation</declname>
          <defval>EAST</defval>
        </param>
        <param>
          <type>enum <ref refid="typedefs_8h_1a8e52c966e0076d183563b5aac207dc05" kindref="member">flips</ref></type>
          <declname>character_flip</declname>
          <defval>HEADS</defval>
        </param>
        <briefdescription>
<para>Produces a <computeroutput><ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref></computeroutput> instantiation for a MAX7219-controlled 8x8 LED matrix display module that has text scrolling from right-to-left. </para>
        </briefdescription>
        <detaileddescription>
<para>You may need to experiment with choices of <computeroutput>display_orientation</computeroutput> and <computeroutput>character_flip</computeroutput> <ndash/> one of the eight possible combinations will match your particular display.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>words_per_minute</parametername>
</parameternamelist>
<parameterdescription>
<para>the approximate rate at which the text scrolls across the display </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>display_orientation</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter to match the characters&apos; rotation with that of your display </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>character_flip</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter to match the characters&apos; bit order with that of your display </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <computeroutput><ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref></computeroutput> instantiation initialized for an 8x8 LED matrix display with scrolling text </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/typedefs.h" line="310" column="38" bodyfile="src/typedefs.h" bodystart="310" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="typedefs_8h_1a530d61accf4784d2ddbc20e3c75bd1e1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref></type>
        <definition>static cowpi_display_module_t cowpi_configure_lcd_character_display</definition>
        <argsstring>(uint8_t width=16, uint8_t height=2)</argsstring>
        <name>cowpi_configure_lcd_character_display</name>
        <param>
          <type>uint8_t</type>
          <declname>width</declname>
          <defval>16</defval>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>height</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
<para>Produces a <computeroutput><ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref></computeroutput> instantiation for an HD44780-controlled LCD character display. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of characters per row; 16 is the default, and 20 is an option </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of rows; 2 is the default, and 4 is an option </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <computeroutput><ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref></computeroutput> instantiation initialized for an LCD character display </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/typedefs.h" line="333" column="38" bodyfile="src/typedefs.h" bodystart="333" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="typedefs_8h_1a43fcd010cb065c2d25ae8b2bcd1bacf7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref></type>
        <definition>static cowpi_display_module_t cowpi_configure_morse_code</definition>
        <argsstring>(uint8_t words_per_minute=5)</argsstring>
        <name>cowpi_configure_morse_code</name>
        <param>
          <type>uint8_t</type>
          <declname>words_per_minute</declname>
          <defval>5</defval>
        </param>
        <briefdescription>
<para>Produces a <computeroutput><ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref></computeroutput> instantiation for a &quot;display&quot; of that places Morse Code on an output pin. </para>
        </briefdescription>
        <detaileddescription>
<para>The nominal usage is to illuminate an LED; however, a buzzer with its own oscillator crystal will also work.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>words_per_minute</parametername>
</parameternamelist>
<parameterdescription>
<para>the approximate rate at which the text is sent to the output pin </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <computeroutput><ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref></computeroutput> instantiation initialized for sending Morse Code to an output pin </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/typedefs.h" line="356" column="38" bodyfile="src/typedefs.h" bodystart="356" bodyend="365"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Structures that consolidate configuration data for display modules and protocols to communication with the display modules. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Christopher A. Bohn</para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CowPi_stdio<sp/>(c)<sp/>2022-23<sp/>Christopher<sp/>A.<sp/>Bohn</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>COWPI_STDIO_TYPEDEFS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COWPI_STDIO_TYPEDEFS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="typedefs_8h_1a6d3dee1ec4ba6aafec39cefe74684191" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="typedefs_8h_1a6d3dee1ec4ba6aafec39cefe74684191" kindref="member">display_modules</ref><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>NO_MODULE<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>SEVEN_SEGMENT,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>LED_MATRIX,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD_CHARACTER,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>OLED_MATRIX,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>MORSE_CODE</highlight></codeline>
<codeline lineno="46"><highlight class="normal">};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="typedefs_8h_1a17e213b55d23626361c092746fd9aa3e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="typedefs_8h_1a17e213b55d23626361c092746fd9aa3e" kindref="member">orientations</ref><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>EAST<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>NORTH,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>WEST,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>SOUTH</highlight></codeline>
<codeline lineno="61"><highlight class="normal">};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="typedefs_8h_1a8e52c966e0076d183563b5aac207dc05" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="typedefs_8h_1a8e52c966e0076d183563b5aac207dc05" kindref="member">flips</ref><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>HEADS<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>TAILS</highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="typedefs_8h_1afd636896b1f6e43aacdb4c31b5da5036" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="typedefs_8h_1afd636896b1f6e43aacdb4c31b5da5036" kindref="member">protocols</ref><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>NO_PROTOCOL<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>I2C,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI</highlight></codeline>
<codeline lineno="87"><highlight class="normal">};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="typedefs_8h_1a338f0414b64e1aaa411ef8e80337c173" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="typedefs_8h_1a338f0414b64e1aaa411ef8e80337c173" kindref="member">adapter_mappings</ref><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>COWPI_DEFAULT<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>ADAFRUIT</highlight></codeline>
<codeline lineno="104"><highlight class="normal">};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="structcowpi__display__module__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="typedefs_8h_1a6d3dee1ec4ba6aafec39cefe74684191" kindref="member">display_modules</ref><sp/>display_module;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>width;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>by<sp/>all<sp/>displays<sp/>except<sp/>MORSE_CODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>height;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>by<sp/>multi-row<sp/>displays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>words_per_minute;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>by<sp/>timed<sp/>streams</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="typedefs_8h_1a17e213b55d23626361c092746fd9aa3e" kindref="member">orientations</ref><sp/>display_orientation;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>by<sp/>LED<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="typedefs_8h_1a8e52c966e0076d183563b5aac207dc05" kindref="member">flips</ref><sp/>character_flip;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>by<sp/>LED<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">}<sp/><ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="structcowpi__display__module__protocol__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>C++<sp/>doesn&apos;t<sp/>allow<sp/>anonymous<sp/>unions,<sp/>so<sp/>we&apos;ll<sp/>be<sp/>a<sp/>little<sp/>less<sp/>memory-efficient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="typedefs_8h_1afd636896b1f6e43aacdb4c31b5da5036" kindref="member">protocols</ref><sp/>protocol;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data_pin;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>by<sp/>all<sp/>protocols<sp/>(including<sp/>NO_PROTOCOL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>clock_pin;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>used<sp/>by<sp/>NO_PROTOCOL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>select_pin;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>only<sp/>for<sp/>SPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>i2c_address;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>only<sp/>for<sp/>I2C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="typedefs_8h_1a338f0414b64e1aaa411ef8e80337c173" kindref="member">adapter_mappings</ref><sp/>adapter_mapping;<sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>only<sp/>for<sp/>HD44780</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">}<sp/><ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>extern<sp/>&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/>While<sp/>C++<sp/>will<sp/>allow<sp/>us<sp/>to<sp/>use<sp/>a<sp/>struct<sp/>initializer<sp/>that<sp/>uses<sp/>default<sp/>(zero)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/>values<sp/>for<sp/>fields<sp/>that<sp/>are<sp/>not<sp/>given<sp/>an<sp/>explicit<sp/>initial<sp/>value,<sp/>it<sp/>will<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/>allow<sp/>us<sp/>to<sp/>skip<sp/>over<sp/>fields<sp/>when<sp/>doing<sp/>so<sp/>(unlike<sp/>C)<sp/>--<sp/>for<sp/>example,<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cannot<sp/>initialize<sp/>i2c_address<sp/>without<sp/>explicitly<sp/>(and<sp/>unnecessarily)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/>initializing<sp/>select_pin<sp/>--<sp/>and<sp/>so<sp/>we&apos;ll<sp/>provide<sp/>some<sp/>initialization<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>use<sp/>in<sp/>C++<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>doesn&apos;t<sp/>seem<sp/>to<sp/>be<sp/>an<sp/>easy<sp/>way<sp/>to<sp/>use<sp/>Arduino&apos;s<sp/>MOSI,<sp/>SCK,<sp/>SDA,<sp/>and<sp/>SCL<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(ARDUINO_AVR_UNO)<sp/>||<sp/>defined<sp/>(ARDUINO_AVR_NANO)<sp/>||<sp/>defined<sp/>(ARDUINO_AVR_NANO_EVERY)<sp/>||<sp/>defined<sp/>(ARDUINO_SAMD_NANO_33_IOT)<sp/>||<sp/>defined<sp/>(ARDUINO_ARDUINO_NANO33BLE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COWPI_DEFAULT_SPI_DATA_PIN<sp/><sp/><sp/><sp/><sp/><sp/>(11)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COWPI_DEFAULT_SPI_CLOCK_PIN<sp/><sp/><sp/><sp/><sp/>(13)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COWPI_DEFAULT_SPI_SELECT_PIN<sp/><sp/><sp/><sp/>(10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COWPI_DEFAULT_I2C_DATA_PIN<sp/><sp/><sp/><sp/><sp/><sp/>(18)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COWPI_DEFAULT_I2C_CLOCK_PIN<sp/><sp/><sp/><sp/><sp/>(19)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>(ARDUINO_AVR_MEGA2560)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COWPI_DEFAULT_SPI_DATA_PIN<sp/><sp/><sp/><sp/><sp/><sp/>(51)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COWPI_DEFAULT_SPI_CLOCK_PIN<sp/><sp/><sp/><sp/><sp/>(52)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COWPI_DEFAULT_SPI_SELECT_PIN<sp/><sp/><sp/><sp/>(53)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COWPI_DEFAULT_I2C_DATA_PIN<sp/><sp/><sp/><sp/><sp/><sp/>(20)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COWPI_DEFAULT_I2C_CLOCK_PIN<sp/><sp/><sp/><sp/><sp/>(21)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>(ARDUINO_RASPBERRY_PI_PICO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COWPI_DEFAULT_SPI_DATA_PIN<sp/><sp/><sp/><sp/><sp/><sp/>(19)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COWPI_DEFAULT_SPI_CLOCK_PIN<sp/><sp/><sp/><sp/><sp/>(18)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COWPI_DEFAULT_SPI_SELECT_PIN<sp/><sp/><sp/><sp/>(17)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COWPI_DEFAULT_I2C_DATA_PIN<sp/><sp/><sp/><sp/><sp/><sp/>(4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COWPI_DEFAULT_I2C_CLOCK_PIN<sp/><sp/><sp/><sp/><sp/>(5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#warning<sp/>No<sp/>default<sp/>SPI/I2C<sp/>pins<sp/>are<sp/>defined!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//microcontroller<sp/>boards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="typedefs_8h_1a60f460d6da2938baccbfd94fe2a9331a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref><sp/><ref refid="typedefs_8h_1a60f460d6da2938baccbfd94fe2a9331a" kindref="member">cowpi_configure_single_pin</ref>(uint8_t<sp/>data_pin)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref>)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.protocol<sp/>=<sp/>NO_PROTOCOL,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.data_pin<sp/>=<sp/>data_pin,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.clock_pin<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.select_pin<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.i2c_address<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.adapter_mapping<sp/>=<sp/>COWPI_DEFAULT</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="typedefs_8h_1ac450537bd2d711481dc166356cede4ca" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref><sp/><ref refid="typedefs_8h_1ac450537bd2d711481dc166356cede4ca" kindref="member">cowpi_configure_spi</ref>(uint8_t<sp/>select_pin,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>data_pin<sp/>=<sp/>COWPI_DEFAULT_SPI_DATA_PIN,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>clock_pin<sp/>=<sp/>COWPI_DEFAULT_SPI_CLOCK_PIN,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="typedefs_8h_1a338f0414b64e1aaa411ef8e80337c173" kindref="member">adapter_mappings</ref><sp/>adapter_mapping<sp/>=<sp/>COWPI_DEFAULT)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref>)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.protocol<sp/>=<sp/>SPI,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.data_pin<sp/>=<sp/>data_pin,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.clock_pin<sp/>=<sp/>clock_pin,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.select_pin<sp/>=<sp/>select_pin,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.i2c_address<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.adapter_mapping<sp/>=<sp/>adapter_mapping</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="typedefs_8h_1aefd856d56e7dfa644278ecc72ae40094" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref><sp/><ref refid="typedefs_8h_1aefd856d56e7dfa644278ecc72ae40094" kindref="member">cowpi_configure_i2c</ref>(uint8_t<sp/>i2c_address,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>data_pin<sp/>=<sp/>COWPI_DEFAULT_I2C_DATA_PIN,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>clock_pin<sp/>=<sp/>COWPI_DEFAULT_I2C_CLOCK_PIN,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="typedefs_8h_1a338f0414b64e1aaa411ef8e80337c173" kindref="member">adapter_mappings</ref><sp/>adapter_mapping<sp/>=<sp/>COWPI_DEFAULT)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref>)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.protocol<sp/>=<sp/>I2C,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.data_pin<sp/>=<sp/>data_pin,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.clock_pin<sp/>=<sp/>clock_pin,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.select_pin<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.i2c_address<sp/>=<sp/>i2c_address,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.adapter_mapping<sp/>=<sp/>adapter_mapping</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="typedefs_8h_1a7a30b2642abc03336752fee9b7346fab" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref><sp/><ref refid="typedefs_8h_1a7a30b2642abc03336752fee9b7346fab" kindref="member">cowpi_configure_seven_segment_display</ref>()<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref>)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.display_module<sp/>=<sp/>SEVEN_SEGMENT,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.width<sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.height<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.words_per_minute<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.display_orientation<sp/>=<sp/>EAST,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.character_flip<sp/>=<sp/>HEADS</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="typedefs_8h_1aba5b55f258c69a4e4bb7f369d9cdf039" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref><sp/><ref refid="typedefs_8h_1aba5b55f258c69a4e4bb7f369d9cdf039" kindref="member">cowpi_configure_scrolling_seven_segment_display</ref>(uint8_t<sp/>words_per_minute<sp/>=<sp/>30)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref>)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.display_module<sp/>=<sp/>SEVEN_SEGMENT,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.width<sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.height<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.words_per_minute<sp/>=<sp/>words_per_minute,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.display_orientation<sp/>=<sp/>EAST,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.character_flip<sp/>=<sp/>HEADS</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="typedefs_8h_1a0e902fa7db358312d830c684be1dc0fa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref><sp/><ref refid="typedefs_8h_1a0e902fa7db358312d830c684be1dc0fa" kindref="member">cowpi_configure_led_matrix_display</ref>(uint8_t<sp/>words_per_minute<sp/>=<sp/>30,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="typedefs_8h_1a17e213b55d23626361c092746fd9aa3e" kindref="member">orientations</ref><sp/>display_orientation<sp/>=<sp/>EAST,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="typedefs_8h_1a8e52c966e0076d183563b5aac207dc05" kindref="member">flips</ref><sp/>character_flip<sp/>=<sp/>HEADS)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref>)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.display_module<sp/>=<sp/>LED_MATRIX,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.width<sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.height<sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.words_per_minute<sp/>=<sp/>words_per_minute,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.display_orientation<sp/>=<sp/>display_orientation,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.character_flip<sp/>=<sp/>character_flip</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="typedefs_8h_1a530d61accf4784d2ddbc20e3c75bd1e1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref><sp/><ref refid="typedefs_8h_1a530d61accf4784d2ddbc20e3c75bd1e1" kindref="member">cowpi_configure_lcd_character_display</ref>(uint8_t<sp/>width<sp/>=<sp/>16,<sp/>uint8_t<sp/>height<sp/>=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref>)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.display_module<sp/>=<sp/>LCD_CHARACTER,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.width<sp/>=<sp/>width,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.height<sp/>=<sp/>height,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.words_per_minute<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.display_orientation<sp/>=<sp/>EAST,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.character_flip<sp/>=<sp/>HEADS</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="typedefs_8h_1a43fcd010cb065c2d25ae8b2bcd1bacf7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref><sp/><ref refid="typedefs_8h_1a43fcd010cb065c2d25ae8b2bcd1bacf7" kindref="member">cowpi_configure_morse_code</ref>(uint8_t<sp/>words_per_minute<sp/>=<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structcowpi__display__module__t" kindref="compound">cowpi_display_module_t</ref>)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.display_module<sp/>=<sp/>MORSE_CODE,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.width<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.height<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.words_per_minute<sp/>=<sp/>words_per_minute,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.display_orientation<sp/>=<sp/>EAST,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.character_flip<sp/>=<sp/>HEADS</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//__CPLUSPLUS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//COWPI_STDIO_TYPEDEFS_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/typedefs.h"/>
  </compounddef>
</doxygen>
