<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="max7219_8c" kind="file" language="C++">
    <compoundname>max7219.c</compoundname>
    <includes local="no">Arduino.h</includes>
    <includes local="no">assert.h</includes>
    <includes refid="max7219_8h" local="yes">max7219.h</includes>
    <includes refid="communication_8h" local="yes">../communication/communication.h</includes>
    <incdepgraph>
      <node id="7">
        <label>../communication/communication.h</label>
        <link refid="communication_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/max7219/max7219.c</label>
        <link refid="max7219_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>max7219.h</label>
        <link refid="max7219_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>../typedefs.h</label>
        <link refid="typedefs_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Arduino.h</label>
      </node>
      <node id="3">
        <label>assert.h</label>
      </node>
      <node id="8">
        <label>stdbool.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="max7219_8c_1aa3cf9e639e5c1de7634bd001eec9d484" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cowpi_setup_max7219</definition>
        <argsstring>(const cowpi_display_module_protocol_t *configuration)</argsstring>
        <name>cowpi_setup_max7219</name>
        <param>
          <type>const <ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref> *</type>
          <declname>configuration</declname>
        </param>
        <briefdescription>
<para>Configures the MAX7219 to nominal settings. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configuration</parametername>
</parameternamelist>
<parameterdescription>
<para>the pins used for SPI </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/max7219/max7219.c" line="29" column="6" bodyfile="src/max7219/max7219.c" bodystart="29" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="max7219_8c_1a520ba7e36f1e594821af8f92b9cd75dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cowpi_max7219_send</definition>
        <argsstring>(const cowpi_display_module_protocol_t *configuration, uint8_t address, uint8_t data)</argsstring>
        <name>cowpi_max7219_send</name>
        <param>
          <type>const <ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref> *</type>
          <declname>configuration</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Sends a byte of data to be placed in the specified MAX7219 register. </para>
        </briefdescription>
        <detaileddescription>
<para>The firmware program should only need to send data to addresses 1-8, the digit registers. Most other registers are handled by specific <computeroutput>cowpi_max7219</computeroutput> functions.</para>
<para>This is a portable software-only implementation; it does not use SPI hardware, nor does it use memory-mapped I/O of any form. Re-implementing this function (using a different function name) to use SPI hardware is a possible part of a memory-mapped I/O lab assignment.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configuration</parametername>
</parameternamelist>
<parameterdescription>
<para>the pins used for SPI </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>address</parametername>
</parameternamelist>
<parameterdescription>
<para>the register to be updated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte to place in that register </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/max7219/max7219.c" line="47" column="6" bodyfile="src/max7219/max7219.c" bodystart="47" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="max7219_8c_1aa6bde6b535ba9fe55f44e2d6cc18089d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cowpi_max7219_no_decode</definition>
        <argsstring>(const cowpi_display_module_protocol_t *configuration)</argsstring>
        <name>cowpi_max7219_no_decode</name>
        <param>
          <type>const <ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref> *</type>
          <declname>configuration</declname>
        </param>
        <briefdescription>
<para>Takes the MAX7219 out of decode mode. </para>
        </briefdescription>
        <detaileddescription>
<para>This function places 0 in the MAX7219&apos;s Decode-Mode register, causing the display to map the data register bits directly to the digits&apos; segments.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configuration</parametername>
</parameternamelist>
<parameterdescription>
<para>the pins used for SPI</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>cowpi_max_bcd_decode </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/max7219/max7219.c" line="56" column="6" bodyfile="src/max7219/max7219.c" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="max7219_8c_1a6d04ebbeeef727e0c99eea52a4cc5046" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cowpi_max7219_bcd_decode</definition>
        <argsstring>(const cowpi_display_module_protocol_t *configuration)</argsstring>
        <name>cowpi_max7219_bcd_decode</name>
        <param>
          <type>const <ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref> *</type>
          <declname>configuration</declname>
        </param>
        <briefdescription>
<para>Places the MAX7219 in decode mode. </para>
        </briefdescription>
        <detaileddescription>
<para>This function places 0xFF in the MAX7219&apos;s Decode-Mode register, causing the display to interpret the data register bits as BCD values and place the corresponding decimal numeral on the digits.</para>
<para>This function should not be called when using an 8x8 LED matrix <ndash/> there&apos;s no harm in doing so, but decode mode really is meant for 7-segment displays.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configuration</parametername>
</parameternamelist>
<parameterdescription>
<para>the pins used for SPI</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>cowpi_max_bcd_decode </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/max7219/max7219.c" line="60" column="6" bodyfile="src/max7219/max7219.c" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="max7219_8c_1a0e939da1631828884abad234eeb66c7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cowpi_max7219_set_intensity</definition>
        <argsstring>(const cowpi_display_module_protocol_t *configuration, uint8_t intensity)</argsstring>
        <name>cowpi_max7219_set_intensity</name>
        <param>
          <type>const <ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref> *</type>
          <declname>configuration</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>intensity</declname>
        </param>
        <briefdescription>
<para>Sets the MAX7219 display module&apos;s brightness level. </para>
        </briefdescription>
        <detaileddescription>
<para>This function places the argument in the MAX7219&apos;s Intensity register. The MAX7219 ignores the upper four bits, so there are 16 levels of brightness.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configuration</parametername>
</parameternamelist>
<parameterdescription>
<para>the pins used for SPI </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>intensity</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired brightness level </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/max7219/max7219.c" line="64" column="6" bodyfile="src/max7219/max7219.c" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="max7219_8c_1a5485fb13f4b90d3e0ce92f5830a42991" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cowpi_max7219_shutdown</definition>
        <argsstring>(const cowpi_display_module_protocol_t *configuration)</argsstring>
        <name>cowpi_max7219_shutdown</name>
        <param>
          <type>const <ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref> *</type>
          <declname>configuration</declname>
        </param>
        <briefdescription>
<para>Shuts-down the MAX7219 display module. </para>
        </briefdescription>
        <detaileddescription>
<para>This function places a 0 in the MAX7219&apos;s Shutdown register, causing the display to blank. Data in the digit and control registers remain unchanged.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configuration</parametername>
</parameternamelist>
<parameterdescription>
<para>the pins used for SPI</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="max7219_8h_1a3144ea1358ef6ae7a54bd6b5d21cec2d" kindref="member">cowpi_max7219_startup</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/max7219/max7219.c" line="68" column="6" bodyfile="src/max7219/max7219.c" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="max7219_8c_1a3144ea1358ef6ae7a54bd6b5d21cec2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cowpi_max7219_startup</definition>
        <argsstring>(const cowpi_display_module_protocol_t *configuration)</argsstring>
        <name>cowpi_max7219_startup</name>
        <param>
          <type>const <ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref> *</type>
          <declname>configuration</declname>
        </param>
        <briefdescription>
<para>Takes the MAX7219 display module out of shutdown mode. </para>
        </briefdescription>
        <detaileddescription>
<para>This function places a 1 in the MAX7219&apos;s Shutdown register, causing the display to resume.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configuration</parametername>
</parameternamelist>
<parameterdescription>
<para>the pins used for SPI</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="max7219_8h_1a5485fb13f4b90d3e0ce92f5830a42991" kindref="member">cowpi_max7219_shutdown</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/max7219/max7219.c" line="72" column="6" bodyfile="src/max7219/max7219.c" bodystart="72" bodyend="74"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Utility functions for peripherals driven by MAX7219 such as 8-digit/7-segment display modules and 8x8 LED matrices.   </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Christopher A. Bohn</para>
</simplesect>
</para>
<para>The MAX7219 will initially be configured to use all eight digits (or all 8 rows in the case of an 8x8 LED matrix), intensity level 3 (7/32 of full brightness), no-decode, not shut-down, and not in test mode.</para>
<para>The MAX7219 is simple enough that firmware programs can send data (or commands) to it directly through <computeroutput><ref refid="max7219_8h_1a520ba7e36f1e594821af8f92b9cd75dd" kindref="member">cowpi_max7219_send()</ref></computeroutput>; however, convenient abstractions can also be built on top of <computeroutput><ref refid="max7219_8h_1a520ba7e36f1e594821af8f92b9cd75dd" kindref="member">cowpi_max7219_send()</ref></computeroutput>.   </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CowPi_stdio<sp/>(c)<sp/>2022-23<sp/>Christopher<sp/>A.<sp/>Bohn</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Arduino.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="max7219_8h" kindref="compound">max7219.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../communication/communication.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="max7219_8c_1aa3cf9e639e5c1de7634bd001eec9d484" kindref="member">cowpi_setup_max7219</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref><sp/>*configuration)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(configuration-&gt;protocol<sp/>==<sp/>SPI);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>all<sp/>digit<sp/>registers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>8;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="max7219_8c_1a520ba7e36f1e594821af8f92b9cd75dd" kindref="member">cowpi_max7219_send</ref>(configuration,<sp/>i,<sp/>0);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Take<sp/>display<sp/>out<sp/>of<sp/>decode<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="max7219_8c_1aa6bde6b535ba9fe55f44e2d6cc18089d" kindref="member">cowpi_max7219_no_decode</ref>(configuration);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Intensity<sp/>at<sp/>7/32<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="max7219_8c_1a0e939da1631828884abad234eeb66c7c" kindref="member">cowpi_max7219_set_intensity</ref>(configuration,<sp/>3);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Scan<sp/>all<sp/>eight<sp/>digits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="max7219_8c_1a520ba7e36f1e594821af8f92b9cd75dd" kindref="member">cowpi_max7219_send</ref>(configuration,<sp/>0xB,<sp/>7);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Take<sp/>display<sp/>out<sp/>of<sp/>shutdown<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="max7219_8c_1a3144ea1358ef6ae7a54bd6b5d21cec2d" kindref="member">cowpi_max7219_startup</ref>(configuration);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Take<sp/>display<sp/>out<sp/>of<sp/>test<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="max7219_8c_1a520ba7e36f1e594821af8f92b9cd75dd" kindref="member">cowpi_max7219_send</ref>(configuration,<sp/>0xF,<sp/>0);</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="max7219_8c_1a520ba7e36f1e594821af8f92b9cd75dd" kindref="member">cowpi_max7219_send</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref><sp/>*configuration,<sp/>uint8_t<sp/>address,<sp/>uint8_t<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="communication_8h_1ae56ad6594960d7d4ee6ef6041c200e0a" kindref="member">cowpi_spi_initialize</ref>(configuration,<sp/>COWPI_MSB_FIRST);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>digitalWrite(configuration-&gt;select_pin,<sp/>LOW);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="communication_8h_1a8081d2ae373c4f3f0ef9883716d7b5ba" kindref="member">cowpi_spi_transmit</ref>(address);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="communication_8h_1a8081d2ae373c4f3f0ef9883716d7b5ba" kindref="member">cowpi_spi_transmit</ref>(data);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>digitalWrite(configuration-&gt;select_pin,<sp/>HIGH);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="communication_8h_1a50fed624317382ee7f85dd4e50a9d533" kindref="member">cowpi_spi_finalize</ref>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="max7219_8c_1aa6bde6b535ba9fe55f44e2d6cc18089d" kindref="member">cowpi_max7219_no_decode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref><sp/>*configuration)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="max7219_8c_1a520ba7e36f1e594821af8f92b9cd75dd" kindref="member">cowpi_max7219_send</ref>(configuration,<sp/>0x9,<sp/>0);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="max7219_8c_1a6d04ebbeeef727e0c99eea52a4cc5046" kindref="member">cowpi_max7219_bcd_decode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref><sp/>*configuration)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="max7219_8c_1a520ba7e36f1e594821af8f92b9cd75dd" kindref="member">cowpi_max7219_send</ref>(configuration,<sp/>0x9,<sp/>0xFF);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="max7219_8c_1a0e939da1631828884abad234eeb66c7c" kindref="member">cowpi_max7219_set_intensity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref><sp/>*configuration,<sp/>uint8_t<sp/>intensity)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="max7219_8c_1a520ba7e36f1e594821af8f92b9cd75dd" kindref="member">cowpi_max7219_send</ref>(configuration,<sp/>0xA,<sp/>intensity<sp/>&amp;<sp/>0xF);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="max7219_8c_1a5485fb13f4b90d3e0ce92f5830a42991" kindref="member">cowpi_max7219_shutdown</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref><sp/>*configuration)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="max7219_8c_1a520ba7e36f1e594821af8f92b9cd75dd" kindref="member">cowpi_max7219_send</ref>(configuration,<sp/>0xC,<sp/>0);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="max7219_8c_1a3144ea1358ef6ae7a54bd6b5d21cec2d" kindref="member">cowpi_max7219_startup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcowpi__display__module__protocol__t" kindref="compound">cowpi_display_module_protocol_t</ref><sp/>*configuration)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="max7219_8c_1a520ba7e36f1e594821af8f92b9cd75dd" kindref="member">cowpi_max7219_send</ref>(configuration,<sp/>0xC,<sp/>1);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/max7219/max7219.c"/>
  </compounddef>
</doxygen>
